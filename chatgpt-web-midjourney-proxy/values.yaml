# Default values for chatgpt-web-midjourney-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ydlhero/chatgpt-web-midjourney-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.16.4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3002

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cwmp.linux.plus
      paths:
        - path: /
          pathType: Prefix
  tls: 
    - secretName: linux-plus-tls
      hosts:
        - "*.linux.plus"

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1000m
    memory: 2048Mi
  requests:
    cpu: 500m 
    memory: 1024Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

dotenv:
  enabled: true
  data:
    OPENAI_API_BASE_URL: https://api.dwyu.top
    OPENAI_API_KEY: sk-Jfds42uk6FfcxOpLD74f8430EeEf447bBcA16dBcAb6cC478
    MJ_SERVER: https://api.dwyu.top
    MJ_API_SECRET: sk-Jfds42uk6FfcxOpLD74f8430EeEf447bBcA16dBcAb6cC478
    OPENAI_API_MODEL: gpt-3.5-turbo
    AUTH_SECRET_KEY: hkzn123
    API_UPLOADER: 0
    HIDE_SERVER: true
    UPLOAD_IMG_SIZE: 10
    SYS_THEME: dark
    AUTH_SECRET_ERROR_COUNT: 10
    AUTH_SECRET_ERROR_TIME: 10
    UPLOAD_TYPE: ''

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
